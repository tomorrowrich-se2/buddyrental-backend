generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Credential {
  userId   String  @id @unique @default(uuid()) @map("user_id") @db.Uuid
  email    String  @unique
  password String
  verified Boolean @default(false)
}

model User {
  userId    String @id @unique @default(uuid()) @map("user_id") @db.Uuid
  firstName String @map("first_name")
  lastName  String @map("last_name")
  citizenId String @map("citizen_id")

  email       String
  phoneNumber String  @map("phone_number")
  password    String  @db.VarChar(64)
  verified    Boolean @default(false)

  displayName String?  @map("display_name") @db.VarChar(255)
  gender      String
  dateOfBirth DateTime @map("date_of_birth")

  address String
  city    String
  zipcode String

  profilePicture String? @map("profile_picture")
  description    String?

  reviewsMade     Review[] @relation("ReviewToCommenter")
  reviewsReceived Review[] @relation("ReviewToProfile")
}

model Review {
  reviewId    Int      @id @default(autoincrement())
  commenterId String   @db.Uuid
  profileId   String   @db.Uuid
  createdAt   DateTime @default(now())
  rating      Int
  comment     String

  commenter User @relation("ReviewToCommenter", fields: [commenterId], references: [userId], onDelete: Cascade)
  profile   User @relation("ReviewToProfile", fields: [profileId], references: [userId], onDelete: Cascade)
}
