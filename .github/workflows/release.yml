name: Release Pipeline

permissions:
  packages: write
  deployments: write
  contents: write
  pull-requests: write

on:
  push:
    branches:
      - main
      - develop

jobs:
  build-test:
    name: Build and Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        task: [build, test]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: latest

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Update Prisma Client
        run: pnpm prisma generate

      - name: Run ${{ matrix.task }}
        run: |
          if [ "${{ matrix.task }}" == "build" ]; then
            pnpm run build;
          else
            pnpm run test;
          fi
  release:
    name: Semantic Release
    needs: build-test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          persist-credentials: false

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: latest

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Update Prisma Client
        run: pnpm prisma generate

      - name: Run Semantic Release
        env:
          GITHUB_TOKEN: ${{ secrets.SEM_REL_TOKEN }}
        run: pnpm dlx semantic-release --ci
